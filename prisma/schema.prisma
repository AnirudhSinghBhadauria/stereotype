generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

model FeedStatus {
  id            String   @id @unique @default(uuid())
  LastRefreshed DateTime @updatedAt
  Message       String
}

model Author {
  id String @id @unique @default(uuid())

  Name           String   @db.String(18)
  Slug           String   @unique
  ProfilePicture String   @unique
  Designation    String
  DescriptionOne String   @db.String(160)
  DescriptionTwo String   @db.String(500)
  JoinedAt       DateTime @unique @default(now())

  AuthorNumber BigInt @unique @default(autoincrement())

  // Socail Media

  Email     String  @unique
  Twitter   String?
  Instagram String?
  Linktree  String?
  Linkedin  String?

  // Stroy Relation

  HeadlinerStory HeadlinerStory[]
  SideStory      SideStory[]
  MainStory      MainStory[]
}

model HeadlinerStory {
  id String @id @unique @default(uuid())

  // Dedicated Page content

  Title            String @unique @db.String(90)
  Description      String @db.String(240)
  // Author Relation
  Author           Author @relation(fields: [authorId], references: [id])
  authorId         String
  // Category Relation 
  Category         Genre  @relation(fields: [genreId], references: [id])
  genreId          String
  Slug             String @unique
  Tag              String
  Image            String
  ImageDescription String @db.String(150)
  format           String @default("Headline")

  // Miscllaneous Data

  BackgroundColor Colors   @default(LEAF)
  PostNumber      BigInt   @unique @default(autoincrement())
  Reads           Int      @default(0)
  CreatedAt       DateTime @default(now())
  UpdatedAt       DateTime @updatedAt

  // Thumb Contnet

  ThumbTitle            String @unique @db.String(70)
  ThumbDescription      String @db.String(120)
  ThumbImage            String
  ThumbImageDescription String @db.String(150)

  // Story Content 

  IntroPara String  @db.String(450)
  ParaTwo   String  @db.String(450)
  ParaThree String  @db.String(450)
  ParaFour  String  @db.String(450)
  ParaFive  String? @db.String(450)
  ParaSix   String? @db.String(450)
  ParaSeven String  @db.String(400)
  ParaEight String  @db.String(450)

  AsideText String @db.String(120)

  @@index([authorId])
  @@index([genreId])
}

model MainStory {
  id String @id @unique @default(uuid())

  // Dedicated Page content 

  Title            String @db.String(90)
  Description      String @db.String(240)
  // Author Relation 
  Author           Author @relation(fields: [authorId], references: [id])
  authorId         String
  // Category Relation 
  Category         Genre  @relation(fields: [genreId], references: [id])
  genreId          String
  Slug             String @unique
  Tag              String
  Image            String
  ImageDescription String @db.String(150)
  format           String @default("Main")

  // Miscllaneous Data 

  BackgroundColor Colors   @default(LEAF)
  PostNumber      BigInt   @unique @default(autoincrement())
  CreatedAt       DateTime @default(now())
  UpdatedAt       DateTime @updatedAt
  Reads           Int      @default(0)

  // Thumb Content 

  ThumbTitle               String @db.String(90)
  ThumbDescription         String @db.String(150)
  ThumbImageOne            String
  ThumbImageTwo            String
  ThumbImageOneDescription String @db.String(150)
  ThumbImageTwoDescription String @db.String(150)

  SummaryHighlighted String @db.String(200)
  Summary            String @db.String(700)

  // Story Content 

  IntroPara String  @db.String(450)
  ParaTwo   String  @db.String(450)
  ParaThree String  @db.String(450)
  ParaFour  String  @db.String(450)
  ParaFive  String? @db.String(450)
  ParaSix   String? @db.String(450)
  ParaSeven String  @db.String(400)
  ParaEight String  @db.String(450)

  AsideText String @db.String(120)

  @@index([authorId])
  @@index([genreId])
}

model SideStory {
  id String @id @unique @default(uuid())

  // Dedicated Content 

  Title            String @db.String(90)
  Description      String @db.String(240)
  // Author Relation 
  Author           Author @relation(fields: [authorId], references: [id])
  authorId         String
  // Category Relation 
  Category         Genre  @relation(fields: [genreId], references: [id])
  genreId          String
  Slug             String @unique
  Tag              String
  Image            String
  ImageDescription String @db.String(150)
  format           String @default("Side")

  // Miscllaneous Data

  BackgroundColor Colors   @default(LEAF)
  PostNumber      BigInt   @unique @default(autoincrement())
  CreatedAt       DateTime @default(now())
  UpdateAt        DateTime @updatedAt
  Reads           Int      @default(0)

  // Thumb Contnet

  ThumbTitle            String @db.String(90)
  ThumbImage            String
  ThumbImageDescription String @db.String(150)
  ThumbDescriptionOne   String @db.String(105)
  ThumbDescriptionTwo   String @db.String(105)

  // Story Content 

  IntroPara String  @db.String(450)
  ParaTwo   String  @db.String(450)
  ParaThree String  @db.String(450)
  ParaFour  String  @db.String(450)
  ParaFive  String? @db.String(450)
  ParaSix   String? @db.String(450)
  ParaSeven String  @db.String(400)
  ParaEight String  @db.String(450)

  AsideText String @db.String(120)

  @@index([authorId])
  @@index([genreId])
}

// Story Category 

model Genre {
  id       String   @id @unique @default(uuid())
  Category Category @default(Tech)

  // Story Realtions

  HeadlinerStory HeadlinerStory[]
  SideStory      SideStory[]
  MainStory      MainStory[]
}

// Feedback

model Feedback {
  id        String   @id @unique @default(uuid())
  Name      String
  Email     String
  Feedback  String
  CreatedAt DateTime @unique @default(now())
}

// Tip-us

model Tipus {
  id        String   @id @unique @default(uuid())
  Detail    String
  Sentence  String
  Name      String
  Email     String
  CreatedAt DateTime @unique @default(now())
}

//  ENUMS

enum Colors {
  ORANGE
  PINK
  LEAF
  TORQUISE
}

enum Category {
  Entertainment
  News
  Tech
  Review
}
